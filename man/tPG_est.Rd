% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/script.R
\name{tPG_est}
\alias{tPG_est}
\title{Estimating function of the tPG model parameters}
\usage{
tPG_est(
  data,
  t_int,
  tp_start,
  degree,
  den,
  max_eval = 1e+05,
  tol_rel = 1e-08,
  print_models = TRUE,
  low_tp = 6
)
}
\arguments{
\item{data}{Recruitment data of the study formatted as follows: a list where each element contains the recruitment data of one center formatted as a data frame with two columns;
the first column is the grid of recruitment days (or another time unit) for the concerned center, and the second column indicates the respective number of enrollments on that day.}

\item{t_int}{Interim time of the analysis with respect to the start of the first center.}

\item{tp_start}{Starting values for the plateau point to be used in the optimization function. The likelihood is optimized for all these starting values and the the estimated parameters
corresponding to the highest likelihood are used.}

\item{degree}{Candidate degree values for the polynomial.}

\item{den}{Candidate internal knot placement, expressed as a function of the estimated plateau point, i.e., t_p/\code{den}}

\item{max_eval}{Maximum number of iterations of the optimization function. Default is 100000.}

\item{tol_rel}{Tolerance of the optimization function. Default is 1.e-8.}

\item{print_models}{Logical. Print iterations across internal knots and polynomial degrees candidates.}

\item{low_tp}{Lower bound for the plateau point to be used in the optimization function.}
}
\value{
This function returns multiple objects which include the estimates of the parameters under each model and the best-fitting model selected via BIC.
}
\description{
Estimating function of the tPG model parameters
}
\examples{
\dontrun{sim_data <- sim_rec(alpha = 1, p1 = 10, p2 = 0.15, c2 = 0.3, c1 = 0.1,
type = "cdf", t_p = 150, Tmax = 200, s_time = 1:100, C_act = 30, random_init = TRUE)

est <- tPG_est(data = sim_data$data, t_int = 200 , tp_start = c(20, 60, 100, 140), degree = c(2, 3), den = c(NA, 2, 3) )}
}
